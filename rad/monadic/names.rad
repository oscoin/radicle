(def create-name-machine!
  (fn [url]
    (machine/send-prelude! url)
    (machine/send-code! url "rad/monadic/names-remote.rad")))

(def lookup-key
  (fn [machine-ref key]
    (def machine (read-ref machine-ref))
    (def names (lookup :result (machine/eval-in-machine '(list-names) machine)))
    (match (filter (fn [v] (eq? (nth 1 v) key)) names)
      [['name _]]  name
      _            :nothing)))

(def list-names
  (fn [machine-name]
    (def machine (machine/load-machine! machine-name))
    (lookup :result (machine/eval-in-machine '(list-names) machine))))

(def add-name!
  (fn [name-machine-url name key]
    (machine/send!
       name-machine-url
       [(list 'add-name name key)])))

(def fetch!
  "Update the locally cached state of the machine."
  (fn [machine]
    (machine/update-machine-ref! machine)))

(:test
  "The monadic name machine works."
  [:setup
    (do (machine/install-remote-machine-fake)
        (def machine-name "http://localhost:8000/machines/shkjksa")
        (create-name-machine! machine-name)
        (add-name! machine-name "alice" "a")
        (add-name! machine-name "bob" "b")
        (def machine (ref (machine/load-machine! machine-name))))
        ]
  [ (lookup-key machine "a") ==> "alice" ]
  [ (lookup-key machine "b") ==> "bob" ]
  [ (lookup-key machine "c") ==> :nothing ]
)
