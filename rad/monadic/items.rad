{:module  'monadic/items
 :doc     "Functions for interacting with dicts of items in machines"
 :exports '[summary]}

(def summary
  "Given a list of `items`, each a dict with a `:state` key, displays a summary of
  how many items there are of each state."
  (fn [items-name items]
    (string-append
     "\n"
     (show (length items))
     " "
     items-name
     ": "
     (string/intercalate
      ", "
      (map (fn [kv]
             (string-append (show (length (nth 1 kv)))
                            " "
                            (drop 1 (show (nth 0 kv)))))
           (seq (group-by (fn [i] (lookup :state i))
                          items)))))))
