(file-module! "rad/prelude/test.rad")
(import prelude/test)

(file-module! "rad/prelude/basic.rad")
(file-module! "rad/prelude/patterns.rad")
(file-module! "rad/prelude/io.rad")
(file-module! "rad/prelude/bool.rad")
(file-module! "rad/prelude/exception.rad")
(file-module! "rad/prelude/recursion.rad")
(file-module! "rad/prelude/list.rad")
(file-module! "rad/prelude/dict.rad")
(file-module! "rad/prelude/set.rad")
(file-module! "rad/prelude/ref.rad")
(file-module! "rad/prelude/lens.rad")
(file-module! "rad/chain.rad")
(file-module! "rad/state-machine.rad")
(file-module! "rad/prelude/validation.rad")
(file-module! "rad/prelude/util.rad")

(import prelude/basic)
(import prelude/patterns)
(import prelude/strings)
(import prelude/io)
(import prelude/bool)
(import prelude/exception)
(import prelude/recursion)
(import prelude/list)
(import prelude/dict)
(import prelude/set)
(import prelude/ref)
(import prelude/lens)
(import prelude/chain)
(import prelude/state-machine)
(import prelude/validation 'validator)
(import prelude/util)

(def _initial-prompt-text
  "Text used for greeting in the repl."
  "Welcome to radicle. Type (help) for help.")

(def help
  "Default help text."
  (fn []
    "radicle is a LISP-like language intended for programming chains, and interacting with those chains.

    Type (doc '<name>) for further documentation of <name>."))
