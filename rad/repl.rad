(load! "rad/prelude.rad")

;; The Repl


(def _initial_prompt-text
  "Welcome to radicle. Type (help) for help.")

(def help (fn []
  "radicle is a LISP-like language intendended for programming chains, and interacting with those chains.

  Type (doc '<name>) for further documentation of <name>."))


(def repl
  (dict
     'name "repl"
     ;; Parse errors are thrown here
     'getter read-line!))

(subscribe-to! repl print!)
