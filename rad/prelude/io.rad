;; read-line
(def read-line!
  "Read a single line of input and interpret it as radicle data."
  (fn [] (read (get-line!))))

(def read-code!
  (fn [filename]
    (read-many (read-file! filename))))

(document 'read-code!
          '("filename" string)
          "Read code (as data) from a file. Returns a vector of expressions")

(def send-code!
  (fn [chain-id filename]
    (send! chain-id (read-code! filename))))

(document 'send-code!
          '(("chain-id" string) ("filename" string))
          "Send code from a file to a remote chain.")
