{:module 'prelude/set
 :doc "Sets, built using dicts."
 :exports '[empty insert delete member? to-vec from-seq]}

(def empty
  "An empty set."
  {})

(def insert
  "Insert a value into a set."
  (fn [x s]
    (insert x #t s)))

(def delete
  "Delete a value from a set."
  (fn [x s]
    (delete x s)))

(def member?
  "Query if an value is an element of a set."
  (fn [x s]
    (member? x s)))

(def to-vec
  "Convert a set to a vector."
  (fn [s] (keys s)))

(def from-seq
  "Create a set from a sequence."
  (fn [xs] (foldr set/insert {} xs)))
