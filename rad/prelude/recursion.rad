;; y-combinators ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(def Y
  "A combinator used to create recursive functions of one variable."
  (fn [h]
    ((fn [x] (x x))
     (fn [g]
       (h (fn [arg] ((g g) arg)))))))
(def Y2
  "A combinator used to create recursive functions of two variables."
  (fn [h]
    ((fn [x] (x x))
     (fn [g]
       (h (fn [arg1 arg2] ((g g) arg1 arg2)))))))

(:test "Y combinator"
  [ (do
      (def fac (Y (fn [f] (fn [x] (if (< x 2) 1 (* x (f (- x 1))))))))
      (fac 10)) ==> 3628800
  ]
)
