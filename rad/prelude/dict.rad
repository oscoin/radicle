;; dict functions ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; dict-from-list

(def dict-from-list
  (fn [xs]
    (foldr (fn [kv acc] (insert (head kv) (head (tail kv)) acc)) (dict) xs)))

(document 'dict-from-list
  '(("list" list))
  "Creates a dictionary from a list of key-value pairs.")

(should-be "dict-from-list"
           (dict-from-list (list (list :one 1) (list :two 2)))
           (dict :one 1 :two 2))

;; keys

(def keys
  (fn [d]
    (map head (seq d))))

(document 'keys
  '(("dict" dict))
  "Returns the list of keys in a dictionary.")

;; Uncomment this test once map is fixed.
;; (should-be "keys"
;;            (keys (dict :one 1 :two 2))
;;            '(:one :two))


;; rekey
(def rekey (fn [old-key new-key mp]
  (def old-val (lookup old-key mp))
  (delete old-key (insert new-key old-val mp)))) 

(document 'rekey
  '(("old-key" any) ("new-key" any) ("dict" dict))
  "Change the key from 'old-key' to 'new-key' in 'dict'. If 'new-key' already exists, it is overwritten.")

(should-be "rekey"
           (rekey :a :b {:a 5})
           {:b 5})

;; modify-map
(def modify-map (fn [key f mp]
  (insert key (f (lookup key mp)) mp)))

(should-be "modify-map"
  (modify-map 'a (fn [x] (+ x 1)) (dict 'a 5))
  (dict 'a 6))
