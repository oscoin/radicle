{:module 'prelude/machine-remote
 :doc "Functions for writing remote RSMs"
 :exports '[lock-machine lock-machine-commands]}

(import prelude/test-macro '[test tests] :unqualified)
(import prelude/ref '[modify-ref] :unqualified)
(import prelude/patterns :unqualified)

(def lock-machine
  "Lock the arbitrary transactions of a machine using a validator."
  (fn [validator f]
    (fn [expr _state]
      (match expr
             (/cons (/= 'update) (/cons 'e /nil))
             (do (validator e)
                 (lookup :eval e))
             _
             (f expr)))))

(def lock-machine-commands
  "Lock the machine with a ref of a dict of commands."
  (fn [validator commands-ref]
    (lock-machine validator
                  (fn [expr]
                    (def command (first expr))
                    (def args    (rest expr))
                    (def do-this (lookup command (read-ref commands-ref)))
                    (apply do-this args)))))
