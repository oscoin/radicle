(ns prelude.machine-remote "Functions for writing remote RSMs")

(require prelude.test-macro '[test tests])
(require prelude.macros '[let])
(require prelude.ref '[modify-ref])
(require prelude.patterns '[match-pat ^cons ^= ^nil _])

(def lock-machine
  "Lock the arbitrary transactions of a machine using a validator."
  (fn [validator f]
    (fn [expr]
      (match expr
             (^cons (^= 'update) (^cons 'e ^nil))
             (do (validator e)
                 (lookup :eval e))
             _
             (f expr)))))

(def lock-machine-commands
  "Lock the machine with a ref of a dict of commands."
  (fn [validator commands-ref]
    (lock-machine validator
                  (fn [expr]
                    (let [command (first expr)
                          args    (rest expr)
                          do-this (lookup command (read-ref commands-ref))]
                      (apply do-this args))))))
