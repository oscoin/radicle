---

intro: >-
  This is the `radicle` reference document, with documentation for all functions
  which come as part of the standard distribution.

primFnsDoc: >-
  Primitive functions are those that are built into the compiler. They are
  available on all chains but may be shadowed by later definitions. Those that
  end in a `!` are only available locally, not on 'pure' chains.

preludeModulesDoc: >-
  These are the modules included in the radicle prelude and the functions these
  modules expose.

primFns:
# Basics
- "*"
- "+"
- "-"
- "/"
- "<"
- ">"
- eq?
- apply
- show
- throw
- exit!
- read-annotated
- read-many-annotated
# Eval
- base-eval
# Refs
- ref
- read-ref
- write-ref
# Pattern matching
- match-pat
# Sequences
- cons
- first
- rest
- add-right
- <>
- list
- list-to-vec
- vec-to-list
- zip
- map
- foldl
- foldr
- drop
- sort-by
- take
- nth
- seq
# Dicts
- dict
- lookup
- insert
- delete
- member?
- map-keys
- map-values
# Strings
- string-append
- string-length
- string-replace
- foldl-string
# Types
- type
- atom?
- keyword?
- boolean?
- string?
- number?
- integral?
- vector?
- list?
- dict?
# Modules
- file-module!
- import
# Environment
- get-current-env
- pure-env
- set-current-env
- set-env!
# Time
- timestamp?
- unix-epoch
- now!
# JSON
- to-json
# UUIDs
- uuid!
- uuid?
# Crypto
- default-ecc-curve
- verify-signature
- public-key?
- gen-key-pair!
- gen-signature!
# I/O
- get-args!
- put-str!
- get-line!
- load!
- read-file!
- read-line-handle!
- open-file!
- close-handle!
- system!
- wait-for-process!
- write-handle!
- read-persistent-state!
- write-persistent-state!
# Repl
- subscribe-to!
# Documentation
- doc
- doc!
- apropos!

# All modules apart from prelude/test
modules:
- prelude/basic
- prelude/patterns
- prelude/strings
- prelude/bool
- prelude/exception
- prelude/list
- prelude/dict
- prelude/set
- prelude/io
- prelude/ref
- prelude/lens
- prelude/chain
- prelude/state-machine
- prelude/validation
- prelude/util
