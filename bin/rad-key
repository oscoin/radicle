#!/usr/bin/env radicle

(load! (find-module-file! "prelude.rad"))

(import prelude/key-management :as 'key-mgmt)

(def help
  "rad key - Radicle Key Management CLI

   Usage:
        rad key create [--force]
        rad key help

   Create a new key pair with `rad key create`. If `--force` is appended, an
   existing key pair file will be overwritten.
   Per default, key pairs are stored in `$HOME/.config/radicle/my-keys.rad`
   this can be adjusted by setting `$XDG_CONFIG_HOME`.

   The key pair is used for signing actions in the apps. Note that some actions
   are restricted to certain key pairs so deleting or overwriting your key pair
   can lead to loss of some authorisations.")

(def make-keys
  (fn []
    (def key-path (key-mgmt/create-keys!))
    (put-str! (string-append "Successfully created " key-path))
    ))

(def safe-make-keys
  (fn []
    (match (key-mgmt/read-keys!)
      :nothing  (make-keys)
      _         (put-str! "The `my-keys.rad` file already exists.
If you are sure that you want to replace your key pair, run `rad key create --force`"))))

(def cmd-parse-failure
  (fn [error]
    (parse-failure error help)))

(def args (get-args!))
(match args
  ["create" "--force"]    (make-keys)
  (/cmd-0 "create" help)  (safe-make-keys)
  ["help"]                (put-str! help)
  ["-h"]                  (put-str! help)
  ["--help"]              (put-str! help)
  (/cons 'cmd _)          (cmd-parse-failure (string-append "Unknown command: " cmd))
  _                       (put-str! help))
