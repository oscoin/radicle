#!/usr/bin/env radicle

(load! "rad/prelude.rad")

(def help
  "rad-issues - Radicle issue CLI

   Usage:
        rad [list|new] <chain-name>
        rad help

     list - Select from all issues to view or comment on
     new  - Create a new issue in $EDITOR
     help - Print this help and exit")

(def base-name "http://machine.radicle.xyz/chains")

(def list-issues
  (fn []
    (load! "rad/prelude/io-utils.rad")
    (load! "rad/monadic/issues.rad")

    (def mk-key (fn [v]
      (def key (nth 0 v))
      (def val (nth 1 v))
      [(string-append (show key) " - " (lookup :title val)) val]))
    (def iss (dict-from-seq (map mk-key (seq (list-issues)))))
    (def selected (fzf-select-by-key! iss))
    (def pretty-comment (fn [c]
      (string-append
        "* **" (lookup :github-username c) "** [" (lookup :created-at c) "]:\n\n"
        (string/unlines (map (fn [xs] (string-append "   " xs)) (string/lines (lookup :body c)))))))
    (def pretty-issue (fn [i]
      (string-replace "\r" "" (string-append
         "# Issue " (show (lookup :number i)) " : " (lookup :title i)
         "\n**State:** " (if (eq? (lookup :state i) :open) "open" "closed")
         "\n**Labels:** " (show (lookup :labels i))
         "\n## Description\n" (lookup :body i)
         "\n## Comments\n\n\n" (unlines (map pretty-comment (lookup :comments i)))
    ))))
    (print! (edit-in-editor! (pretty-issue selected)))))

(def new-issue
  (fn []
    (load! "rad/prelude/io-utils.rad")
    (load! "rad/monadic/issues.rad")
    (def template
";; Issue template. An empty or invalid value will abort.
{:title      \"Pick a title\"
 :body       \"Pick a body\"
 :labels     []
}
")
    (def iss (read (edit-in-editor! template)))
    (create-issue!
         (insert
           :state :open
           (insert
              :comments []
              (insert
                :created-at (now!)
                  iss))))))

(def args (get-args!))
(match args
  ["list"] (list-issues)
  ["new" ] (new-issue)
  ["help"] (put-str! help)
  _        (do
             (put-str! (string-append "Unrecognized command" (show args)))
             (put-str! help)))
